name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - staging
  pull_request:
    branches:
      - main
      - develop
      - staging
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Run linter
      run: |
        pip install pylint
        pylint app.py main.py test.py

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Run unit tests
      run: |
        python -m unittest discover

  build-and-deploy-dev:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - name: Build Docker image for dev
      run: |
        docker build -t myapp:dev -f Dockerfile .

    - name: Push Docker image to registry
      run: |
        docker tag myapp:dev myregistry/myapp:dev
        docker push myregistry/myapp:dev

    - name: Deploy to Vercel (Development)
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      run: |
        vercel --prod --confirm

  build-and-deploy-stage:
    runs-on: ubuntu-latest
    needs: build-and-deploy-dev
    if: github.ref == 'refs/heads/staging'
    steps:
    - name: Build Docker image for stage
      run: |
        docker build -t myapp:stage -f Dockerfile .

    - name: Push Docker image to registry
      run:
